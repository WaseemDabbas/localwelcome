.container
  .row
    .col-md-12
      h1
        => link_to @event.chapter.name, admin_chapter_path(@event.chapter)
        | &raquo;
        =<> @event.title
      - if @event.published?
        span.info-label.bg-success Published
      - else
        span.info-label.bg-warning Not yet published
      - if @event.full?
        span.info-label.bg-warning< Event full
      - if @event.announced?
        span.info-label.bg-success< Announcement emails sent

  .row.buttons
    .col-md-12
      - if @event.published?
        = form_for [:admin, @event.chapter, @event], html: { class: "form-inline" } do |f|
          = f.hidden_field :published, value: false
          = f.submit "Unpublish", class: "btn btn-warning"
        - unless @event.announced?
          => link_to "Send announcement emails", admin_chapter_event_announcement_path(@event.chapter, @event), method: :post, class: "btn btn-default"
      - else
        = form_for [:admin, @event.chapter, @event], html: { class: "form-inline" } do |f|
          = f.hidden_field :published, value: true
          = f.submit "Publish", class: "btn btn-success"
      = link_to "Edit", edit_admin_chapter_event_path(@event.chapter, @event), class: "btn btn-default"

  .row
    .col-md-12
      dl
        dt Starts at
        dd = long_friendly_datetime @event.starts_at

        dt Ends at
        dd = long_friendly_datetime @event.ends_at

        dt Capacity
        dd = @event.capacity

        dt Public description (visible everywhere)
        dd
          - if @event.description.blank?
            p.system.message No description yet
          - else
            p = @event.description

        dt Email-only information (only sent to attendees)
        dd
          - if @event.email_info.blank?
            p.system.message No extra information will be included in the emails we send to attendees.
          - else
            p = @event.email_info

  .row
    .col-md-12
      h2 Attendees (#{@event.attendees.count} of #{@event.capacity} slots taken; #{@event.remaining_place_count} slots left)
      table.table.table-striped
        thead
          tr
            th Email address
            th Status
            th &nbsp;
        tbody
          - @event.invitations.map(&:decorate).each do |invite|
            tr
              td = invite.user.try(:email)
              td = invite.friendly_status
              - if invite.requested?
                td
                  = form_tag admin_invite_path(invite), method: :post do
                    = submit_tag "Send invitation", class: "btn btn-success"
              - elsif invite.accepted?
                td
                  = form_tag admin_mark_as_attended_path(invite), method: :post, class: "form-inline" do
                    = submit_tag "Mark as attended", class: "btn btn-success"
                  = form_tag admin_mark_as_no_show_path(invite), method: :post, class: "form-inline" do
                    = submit_tag "Mark as no-show", class: "btn btn-warning"
              - else
                td &nbsp;
